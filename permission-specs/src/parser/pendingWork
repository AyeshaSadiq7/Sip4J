
Work with this check include information of left hand side being a field, local variable, parameter, a reference type or primitive type etc
else if (raExp.getNodeType() == ASTNode.METHOD_INVOCATION){
			
			IMethodBinding imb = getMethodInvocBinding(raExp);
			
			IVariableBinding qualBind = AST_Parser.getObjQualifBind(raExp);
			
				if(qualBind!=null)
				{
				//System.out.println("Qualifying Object = "+qualBind.getName());
		    	}
		    	
			if(imb!=null){
				if(imb.getReturnType()!=null){
					 IVariableBinding leftExpB = AST_Parser.getVariableBinding(laExp);
					 E_MRefField field = getReturnField(imb);	 
					if(ifReferenceType(imb.getReturnType())){
						if(field != null){
							AST_Parser.addAddressFlowExp(leftExpB, raExp,_method);
						}
						else{
							AST_Parser.addFieldAccessExp(_method,leftExpB,GlobalVariables.WRITE,ASTNode.NULL_LITERAL,AST_Parser.ifReturnedField(laExp));	
						}
						
					}
					else{
						AST_Parser.addFieldAccessExp(_method,leftExpB,GlobalVariables.WRITE,AST_Parser.findRightHandExpType(raExp),AST_Parser.ifReturnedField(laExp));	
					}
				}
		   }
		}
//////////////////////////////////////////////////////////////////////////////////////////////

	public static E_Object getQualifyingObject(MethodDeclaration mDecl){
		E_Object obj = null;
	
		if(mDecl.getName().toString().equals("main") == false){
			
			obj = new E_Object();
			
			E_Method _method = Data_Controller.searchMethod(mDecl);
		
			if(_method != null){
			
				if(_method.getQualifyingObject()!=null){
				
					obj =  _method.getQualifyingObject();
		
				}
			}
			else{
			    
				//if(mDecl.getName().equals("main")== false){
				
				   List<MethodInvocation> thi_Minv = AST_Parser.getThisMethodInvokation(mDecl);
				   
				   for(MethodInvocation thi_inv:thi_Minv){
					   
			    	if(thi_inv!=null){
	    			    
				    	IVariableBinding qualBind = null;
				    	
				     	 if(thi_inv.getExpression()!= null){
				    		
				    		 qualBind = AST_Parser.getObjQualifBind(thi_inv.getExpression());
				    	
				    		  if(qualBind!=null ){
						    	 
				    			  obj.setObjBind(qualBind);
				    			  
							   }
				    		  
				    	 }
				    	else{
				    		 
				    		 MethodDeclaration pDecl = fetchParentMethodDecl(thi_inv);
				    		 
				    		 //return getQualifyingObject(pDecl);
				    
				    	}
			    	}
			}
			}
		}
					    	
				    return obj;
	}
	
	////////////////////////////////////////////////////////////////
	remove main method from the context of others
	//////////////////////////////////////////////////////////////////////
	check object information in all case studies
	///////////////////////////////////////////////////////////////////////
	maintain package hierarchy properly using Data-Generator