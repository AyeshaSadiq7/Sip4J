/**************************************************************************
*                                                                         *
*             Java Grande Forum Benchmark Suite - Version 2.0             *
*                                                                         *
*                            produced by                                  *
*                                                                         *
*                  Java Grande Benchmarking Project                       *
*                                                                         *
*                                at                                       *
*                                                                         *
*                Edinburgh Parallel Computing Centre                      *
*                                                                         *
*                email: epcc-javagrande@epcc.ed.ac.uk                     *
*                                                                         *
*      Original version of this code by Hon Yau (hwyau@epcc.ed.ac.uk)     *
*                                                                         *
*      This version copyright (c) The University of Edinburgh, 1999.      *
*                         All rights reserved.                            *
*                                                                         *
**************************************************************************/


package montecarlo;
/**
  * Class for defining the results of a task.  Currently, this is simply
  * the Monte Carlo generate rate path.
  *
  * @author H W Yau
  * @version $Revision: 1.8 $ $Date: 1999/02/16 18:53:07 $
  */
public class ToResult implements java.io.Serializable {
 
	private String header;
  private double expectedReturnRate=Double.NaN;
  private double volatility=Double.NaN;
  private double volatility2=Double.NaN;
  private double finalStockPrice=Double.NaN;
  private double[] pathValue;

  /**
    * Constructor, for the results from a computation.
    *
    * @param header Simple header string.
    * @param pathValue Data computed by the Monte Carlo generator.

  @Perm(requires="pure(#1) * pure(#2) *  pure(#3) * share(#5)  pure(#4) * none(header) * none(expectedReturnRate) * none(volatility)* none(volatility2) * none(finalStockPrice) 
  in ALIVE", 
  ensures= "pure(#1) * pure(#2) *  pure(#3) * share(#5)  pure(#4) * unique(header) * unique(expectedReturnRate) * unique(volatility) * unique(volatility2) * unique(finalStockPrice) * share(pathValue) in ALIVE")
  */
  public ToResult(String header, double expectedReturnRate, double volatility, 
  double volatility2, double finalStockPrice, double[] pathValue) {
    this.header=header;
    this.expectedReturnRate = expectedReturnRate;
    this.volatility = volatility;
    this.volatility2 = volatility2;
    this.finalStockPrice = finalStockPrice;
    this.pathValue = pathValue;
  }
  /**
    * Gives a simple string representation of this object.
    *
    * @return String representation of this object.
   @Perm(requires="pure(header) in ALIVE", 
   ensures= "pure(header) in ALIVE")
    */
  public String toString(){
    return(header);
  }
  //------------------------------------------------------------------------
  // Accessor methods for class ToResult.
  // Generated by 'makeJavaAccessor.pl' script.  HWY.  20th January 1999.
  //------------------------------------------------------------------------
  /**
    * Accessor method for private instance variable <code>header</code>.
    *
    * @return Value of instance variable <code>header</code>.
    @Perm(requires="pure(header) in ALIVE", 
    ensures= "pure(header) in ALIVE")
    */
  public String get_header() {
    return(this.header);
  }
  /**
    * Set method for private instance variable <code>header</code>.
    *
    * @param header the value to set for the instance variable <code>header</code>.
    
    @Perm(requires="share(header) in ALIVE", 
    ensures= "share(header) in ALIVE")
    */
  public void set_header(String header) {
    this.header = header;
  }
  /**
    * Accessor method for private instance variable <code>expectedReturnRate</code>.
    *
    * @return Value of instance variable <code>expectedReturnRate</code>.
   
    *@Perm(requires="pure(expectedReturnRate) in ALIVE", 
     ensures= "pure(expectedReturnRate) in ALIVE")
    */
  public double get_expectedReturnRate() {
    return(this.expectedReturnRate);
  }
  /**
    * Set method for private instance variable <code>expectedReturnRate</code>.
    *
    * @param expectedReturnRate the value to set for the instance variable 
    * <code>expectedReturnRate</code>.
    
    *@Perm(requires="share(expectedReturnRate) in ALIVE", 
 	ensures= "share(expectedReturnRate) in ALIVE")
    */
  public void set_expectedReturnRate(double expectedReturnRate) {
    this.expectedReturnRate = expectedReturnRate;
  }
  /**
    * Accessor method for private instance variable <code>volatility</code>.
    *
    * @return Value of instance variable <code>volatility</code>.
   
   @Perm(requires="pure(volatility) in ALIVE", 
    ensures= "pure(volatility) in ALIVE")
    */
  public double get_volatility() {
    return(this.volatility);
  }
  /**
    * Set method for private instance variable <code>volatility</code>.
    *
    * @param volatility the value to set for the instance variable <code>volatility</code>.
    @Perm(requires="share(volatility) in ALIVE", 
 	ensures= "share(volatility) in ALIVE")
    */
  public void set_volatility(double volatility) {
    this.volatility = volatility;
  }
  /**
    * Accessor method for private instance variable <code>volatility2</code>.
    *
    * @return Value of instance variable <code>volatility2</code>.
    @Perm(requires="pure(volatility2) in ALIVE", 
    ensures= "pure(volatility2) in ALIVE")
    */
  public double get_volatility2() {
    return(this.volatility2);
  }
  /**
    * Set method for private instance variable <code>volatility2</code>.
    *
    * @param volatility2 the value to set for the instance variable <code>volatility2</code>.
  @Perm(requires="share(volatility2) in ALIVE", 
  	ensures= "share(volatility2) in ALIVE")
    */
  public void set_volatility2(double volatility2) {
    this.volatility2 = volatility2;
  }
  /**
    * Accessor method for private instance variable <code>finalStockPrice</code>.
    *
    * @return Value of instance variable <code>finalStockPrice</code>.
   
	@Perm(requires="pure(finalStockPrice) in ALIVE", 
	 ensures= "pure(finalStockPrice) in ALIVE")
    */
  public double get_finalStockPrice() {
    return(this.finalStockPrice);
  }
  /**
    * Set method for private instance variable <code>finalStockPrice</code>.
    *
    * @param finalStockPrice the value to set for the instance variable 
    * <code>finalStockPrice</code>.
   
@Perm(requires="share(finalStockPrice) in ALIVE", 
 ensures= "share(finalStockPrice) in ALIVE")*/
  public void set_finalStockPrice(double finalStockPrice) {
    this.finalStockPrice = finalStockPrice;
  }
  /**
    * Accessor method for private instance variable <code>pathValue</code>.
    *
    * @return Value of instance variable <code>pathValue</code>.
    @Perm(requires="pure(pathValue) in ALIVE", 
 	ensures= "pure(pathValue) in ALIVE")
    */
  public double[] get_pathValue() {
    return(this.pathValue);
  }
  /**
    * Set method for private instance variable <code>pathValue</code>.
    *
    * @param pathValue the value to set for the instance variable <code>pathValue</code>.
    @Perm(requires="pure(#0) * share(pathValue) in ALIVE", 
 	ensures= "pure(*0) * share(pathValue) in ALIVE")
    */
  public void set_pathValue(double[] pathValue) {
    this.pathValue = pathValue;
  }
  //------------------------------------------------------------------------
}


