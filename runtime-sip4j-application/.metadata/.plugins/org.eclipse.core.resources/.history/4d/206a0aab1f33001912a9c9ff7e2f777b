package aeminium.fft;

/******************************************************************************
 *  Compilation:  javac Complex.java
 *  Execution:    java Complex
 *
 *  Data type for complex numbers.
 *
 *  The data type is "immutable" so once you create and initialize
 *  a Complex object, you cannot change it. The "final" keyword
 *  when declaring re and im enforces this rule, making it a
 *  compile-time error to change the .re or .im instance variables after
 *  they've been initialized.
 *  % java Complex
 *  a            = 5.0 + 6.0i
 *  b            = -3.0 + 4.0i
 *  Re(a)        = 5.0
 *  Im(a)        = 6.0
 *  b + a        = 2.0 + 10.0i
 *  a - b        = 8.0 + 2.0i
 *  a * b        = -39.0 + 2.0i
 *  b * a        = -39.0 + 2.0i
 *  a / b        = 0.36 - 1.52i
 *  (a / b) * b  = 5.0 + 6.0i
 *  conj(a)      = 5.0 - 6.0i
 *  |a|          = 7.810249675906654
 *  tan(a)       = -6.685231390246571E-6 + 1.0000103108981198i
 *
 ******************************************************************************/
public class Complex {
    
	public  double re;   // the real part
    public  double im;   // the imaginary part
    Complex a =
   public Complex(double real, double imag) {
        re = real;
        im = imag;
   }
   // return a new Complex object whose value is (this + b)
  public Complex plus(Complex b) {
        Complex a = this;          // invoking object
        double real = a.re + b.re;
        double imag = a.im + b.im;
        return new Complex(real, imag);//returns unique on the result
    }
  // return a new Complex object whose value is (this - b)
   public Complex minus(Complex b) {
        Complex a = this;// handle expression of this type
        double real = this.re - b.re;
        double imag = this.im - b.im;
        return new Complex(real, imag);
    }
    // return a new Complex object whose value is (this * b)
  	
  public Complex times(Complex b) {
        Complex a = this;
        double real = this.re * b.re - this.im * b.im;
        double imag = this.re * b.im + this.im * b.re;
        return new Complex(real, imag);
    }
}
